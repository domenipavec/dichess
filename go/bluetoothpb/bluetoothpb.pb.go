// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bluetoothpb.proto

package bluetoothpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Settings_Language int32

const (
	Settings_ENGLISH   Settings_Language = 0
	Settings_SLOVENIAN Settings_Language = 1
)

var Settings_Language_name = map[int32]string{
	0: "ENGLISH",
	1: "SLOVENIAN",
}

var Settings_Language_value = map[string]int32{
	"ENGLISH":   0,
	"SLOVENIAN": 1,
}

func (x Settings_Language) String() string {
	return proto.EnumName(Settings_Language_name, int32(x))
}

func (Settings_Language) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0, 0}
}

type Settings_PlayerType int32

const (
	Settings_HUMAN    Settings_PlayerType = 0
	Settings_COMPUTER Settings_PlayerType = 1
)

var Settings_PlayerType_name = map[int32]string{
	0: "HUMAN",
	1: "COMPUTER",
}

var Settings_PlayerType_value = map[string]int32{
	"HUMAN":    0,
	"COMPUTER": 1,
}

func (x Settings_PlayerType) String() string {
	return proto.EnumName(Settings_PlayerType_name, int32(x))
}

func (Settings_PlayerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0, 1}
}

type Response_Type int32

const (
	Response_NOOP        Response_Type = 0
	Response_GAME_UPDATE Response_Type = 1
	Response_WIFI_UPDATE Response_Type = 2
)

var Response_Type_name = map[int32]string{
	0: "NOOP",
	1: "GAME_UPDATE",
	2: "WIFI_UPDATE",
}

var Response_Type_value = map[string]int32{
	"NOOP":        0,
	"GAME_UPDATE": 1,
	"WIFI_UPDATE": 2,
}

func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}

func (Response_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{1, 0}
}

type Request_Type int32

const (
	Request_NOOP            Request_Type = 0
	Request_START_WIFI_SCAN Request_Type = 1
	Request_STOP_WIFI_SCAN  Request_Type = 2
	Request_CONFIGURE_WIFI  Request_Type = 3
	Request_FORGET_WIFI     Request_Type = 4
	Request_CONNECT_WIFI    Request_Type = 5
	Request_UPDATE_SETTINGS Request_Type = 6
	Request_UNDO_MOVE       Request_Type = 7
	Request_MOVE            Request_Type = 8
)

var Request_Type_name = map[int32]string{
	0: "NOOP",
	1: "START_WIFI_SCAN",
	2: "STOP_WIFI_SCAN",
	3: "CONFIGURE_WIFI",
	4: "FORGET_WIFI",
	5: "CONNECT_WIFI",
	6: "UPDATE_SETTINGS",
	7: "UNDO_MOVE",
	8: "MOVE",
}

var Request_Type_value = map[string]int32{
	"NOOP":            0,
	"START_WIFI_SCAN": 1,
	"STOP_WIFI_SCAN":  2,
	"CONFIGURE_WIFI":  3,
	"FORGET_WIFI":     4,
	"CONNECT_WIFI":    5,
	"UPDATE_SETTINGS": 6,
	"UNDO_MOVE":       7,
	"MOVE":            8,
}

func (x Request_Type) String() string {
	return proto.EnumName(Request_Type_name, int32(x))
}

func (Request_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{2, 0}
}

type Settings struct {
	Sound                bool                       `protobuf:"varint,1,opt,name=sound,proto3" json:"sound,omitempty"`
	Language             Settings_Language          `protobuf:"varint,2,opt,name=language,proto3,enum=bluetoothpb.Settings_Language" json:"language,omitempty"`
	VoiceRecognition     bool                       `protobuf:"varint,3,opt,name=voice_recognition,json=voiceRecognition,proto3" json:"voice_recognition,omitempty"`
	AutoMove             bool                       `protobuf:"varint,4,opt,name=auto_move,json=autoMove,proto3" json:"auto_move,omitempty"`
	RandomBw             bool                       `protobuf:"varint,5,opt,name=random_bw,json=randomBw,proto3" json:"random_bw,omitempty"`
	Player1              Settings_PlayerType        `protobuf:"varint,6,opt,name=player1,proto3,enum=bluetoothpb.Settings_PlayerType" json:"player1,omitempty"`
	Player2              Settings_PlayerType        `protobuf:"varint,7,opt,name=player2,proto3,enum=bluetoothpb.Settings_PlayerType" json:"player2,omitempty"`
	ComputerSettings     *Settings_ComputerSettings `protobuf:"bytes,8,opt,name=computerSettings,proto3" json:"computerSettings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Settings) Reset()         { *m = Settings{} }
func (m *Settings) String() string { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()    {}
func (*Settings) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0}
}

func (m *Settings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings.Unmarshal(m, b)
}
func (m *Settings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings.Marshal(b, m, deterministic)
}
func (m *Settings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings.Merge(m, src)
}
func (m *Settings) XXX_Size() int {
	return xxx_messageInfo_Settings.Size(m)
}
func (m *Settings) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings.DiscardUnknown(m)
}

var xxx_messageInfo_Settings proto.InternalMessageInfo

func (m *Settings) GetSound() bool {
	if m != nil {
		return m.Sound
	}
	return false
}

func (m *Settings) GetLanguage() Settings_Language {
	if m != nil {
		return m.Language
	}
	return Settings_ENGLISH
}

func (m *Settings) GetVoiceRecognition() bool {
	if m != nil {
		return m.VoiceRecognition
	}
	return false
}

func (m *Settings) GetAutoMove() bool {
	if m != nil {
		return m.AutoMove
	}
	return false
}

func (m *Settings) GetRandomBw() bool {
	if m != nil {
		return m.RandomBw
	}
	return false
}

func (m *Settings) GetPlayer1() Settings_PlayerType {
	if m != nil {
		return m.Player1
	}
	return Settings_HUMAN
}

func (m *Settings) GetPlayer2() Settings_PlayerType {
	if m != nil {
		return m.Player2
	}
	return Settings_HUMAN
}

func (m *Settings) GetComputerSettings() *Settings_ComputerSettings {
	if m != nil {
		return m.ComputerSettings
	}
	return nil
}

type Settings_ComputerSettings struct {
	TimeLimitMs int32 `protobuf:"varint,1,opt,name=time_limit_ms,json=timeLimitMs,proto3" json:"time_limit_ms,omitempty"`
	// from 0 to 20
	SkillLevel int32 `protobuf:"varint,2,opt,name=skill_level,json=skillLevel,proto3" json:"skill_level,omitempty"`
	// enables elo over skill level
	LimitStrength bool `protobuf:"varint,3,opt,name=limit_strength,json=limitStrength,proto3" json:"limit_strength,omitempty"`
	// from 1350 to 2850
	Elo                  int32    `protobuf:"varint,4,opt,name=elo,proto3" json:"elo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Settings_ComputerSettings) Reset()         { *m = Settings_ComputerSettings{} }
func (m *Settings_ComputerSettings) String() string { return proto.CompactTextString(m) }
func (*Settings_ComputerSettings) ProtoMessage()    {}
func (*Settings_ComputerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0, 0}
}

func (m *Settings_ComputerSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings_ComputerSettings.Unmarshal(m, b)
}
func (m *Settings_ComputerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings_ComputerSettings.Marshal(b, m, deterministic)
}
func (m *Settings_ComputerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings_ComputerSettings.Merge(m, src)
}
func (m *Settings_ComputerSettings) XXX_Size() int {
	return xxx_messageInfo_Settings_ComputerSettings.Size(m)
}
func (m *Settings_ComputerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings_ComputerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_Settings_ComputerSettings proto.InternalMessageInfo

func (m *Settings_ComputerSettings) GetTimeLimitMs() int32 {
	if m != nil {
		return m.TimeLimitMs
	}
	return 0
}

func (m *Settings_ComputerSettings) GetSkillLevel() int32 {
	if m != nil {
		return m.SkillLevel
	}
	return 0
}

func (m *Settings_ComputerSettings) GetLimitStrength() bool {
	if m != nil {
		return m.LimitStrength
	}
	return false
}

func (m *Settings_ComputerSettings) GetElo() int32 {
	if m != nil {
		return m.Elo
	}
	return 0
}

type Response struct {
	Type                 Response_Type           `protobuf:"varint,1,opt,name=type,proto3,enum=bluetoothpb.Response_Type" json:"type,omitempty"`
	Networks             []*Response_WifiNetwork `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	Settings             *Settings               `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	GameInProgress       bool                    `protobuf:"varint,4,opt,name=gameInProgress,proto3" json:"gameInProgress,omitempty"`
	Moves                []string                `protobuf:"bytes,5,rep,name=moves,proto3" json:"moves,omitempty"`
	WhiteTurn            bool                    `protobuf:"varint,6,opt,name=whiteTurn,proto3" json:"whiteTurn,omitempty"`
	State                string                  `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	ChessBoard           *Response_ChessBoard    `protobuf:"bytes,8,opt,name=chess_board,json=chessBoard,proto3" json:"chess_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetType() Response_Type {
	if m != nil {
		return m.Type
	}
	return Response_NOOP
}

func (m *Response) GetNetworks() []*Response_WifiNetwork {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *Response) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *Response) GetGameInProgress() bool {
	if m != nil {
		return m.GameInProgress
	}
	return false
}

func (m *Response) GetMoves() []string {
	if m != nil {
		return m.Moves
	}
	return nil
}

func (m *Response) GetWhiteTurn() bool {
	if m != nil {
		return m.WhiteTurn
	}
	return false
}

func (m *Response) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Response) GetChessBoard() *Response_ChessBoard {
	if m != nil {
		return m.ChessBoard
	}
	return nil
}

type Response_WifiNetwork struct {
	Ssid                 string   `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Connected            bool     `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	Available            bool     `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
	Saved                bool     `protobuf:"varint,4,opt,name=saved,proto3" json:"saved,omitempty"`
	Connecting           bool     `protobuf:"varint,5,opt,name=connecting,proto3" json:"connecting,omitempty"`
	Failed               bool     `protobuf:"varint,6,opt,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_WifiNetwork) Reset()         { *m = Response_WifiNetwork{} }
func (m *Response_WifiNetwork) String() string { return proto.CompactTextString(m) }
func (*Response_WifiNetwork) ProtoMessage()    {}
func (*Response_WifiNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{1, 0}
}

func (m *Response_WifiNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_WifiNetwork.Unmarshal(m, b)
}
func (m *Response_WifiNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_WifiNetwork.Marshal(b, m, deterministic)
}
func (m *Response_WifiNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_WifiNetwork.Merge(m, src)
}
func (m *Response_WifiNetwork) XXX_Size() int {
	return xxx_messageInfo_Response_WifiNetwork.Size(m)
}
func (m *Response_WifiNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_WifiNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_Response_WifiNetwork proto.InternalMessageInfo

func (m *Response_WifiNetwork) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *Response_WifiNetwork) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

func (m *Response_WifiNetwork) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Response_WifiNetwork) GetSaved() bool {
	if m != nil {
		return m.Saved
	}
	return false
}

func (m *Response_WifiNetwork) GetConnecting() bool {
	if m != nil {
		return m.Connecting
	}
	return false
}

func (m *Response_WifiNetwork) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

type Response_ChessBoard struct {
	Fen                  string   `protobuf:"bytes,1,opt,name=fen,proto3" json:"fen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_ChessBoard) Reset()         { *m = Response_ChessBoard{} }
func (m *Response_ChessBoard) String() string { return proto.CompactTextString(m) }
func (*Response_ChessBoard) ProtoMessage()    {}
func (*Response_ChessBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{1, 1}
}

func (m *Response_ChessBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_ChessBoard.Unmarshal(m, b)
}
func (m *Response_ChessBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_ChessBoard.Marshal(b, m, deterministic)
}
func (m *Response_ChessBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_ChessBoard.Merge(m, src)
}
func (m *Response_ChessBoard) XXX_Size() int {
	return xxx_messageInfo_Response_ChessBoard.Size(m)
}
func (m *Response_ChessBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_ChessBoard.DiscardUnknown(m)
}

var xxx_messageInfo_Response_ChessBoard proto.InternalMessageInfo

func (m *Response_ChessBoard) GetFen() string {
	if m != nil {
		return m.Fen
	}
	return ""
}

type Request struct {
	Type                 Request_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bluetoothpb.Request_Type" json:"type,omitempty"`
	WifiSsid             string       `protobuf:"bytes,2,opt,name=wifi_ssid,json=wifiSsid,proto3" json:"wifi_ssid,omitempty"`
	WifiPsk              string       `protobuf:"bytes,3,opt,name=wifi_psk,json=wifiPsk,proto3" json:"wifi_psk,omitempty"`
	Settings             *Settings    `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	Move                 string       `protobuf:"bytes,5,opt,name=move,proto3" json:"move,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetType() Request_Type {
	if m != nil {
		return m.Type
	}
	return Request_NOOP
}

func (m *Request) GetWifiSsid() string {
	if m != nil {
		return m.WifiSsid
	}
	return ""
}

func (m *Request) GetWifiPsk() string {
	if m != nil {
		return m.WifiPsk
	}
	return ""
}

func (m *Request) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *Request) GetMove() string {
	if m != nil {
		return m.Move
	}
	return ""
}

func init() {
	proto.RegisterEnum("bluetoothpb.Settings_Language", Settings_Language_name, Settings_Language_value)
	proto.RegisterEnum("bluetoothpb.Settings_PlayerType", Settings_PlayerType_name, Settings_PlayerType_value)
	proto.RegisterEnum("bluetoothpb.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("bluetoothpb.Request_Type", Request_Type_name, Request_Type_value)
	proto.RegisterType((*Settings)(nil), "bluetoothpb.Settings")
	proto.RegisterType((*Settings_ComputerSettings)(nil), "bluetoothpb.Settings.ComputerSettings")
	proto.RegisterType((*Response)(nil), "bluetoothpb.Response")
	proto.RegisterType((*Response_WifiNetwork)(nil), "bluetoothpb.Response.WifiNetwork")
	proto.RegisterType((*Response_ChessBoard)(nil), "bluetoothpb.Response.ChessBoard")
	proto.RegisterType((*Request)(nil), "bluetoothpb.Request")
}

func init() { proto.RegisterFile("bluetoothpb.proto", fileDescriptor_6671346f1aa9b484) }

var fileDescriptor_6671346f1aa9b484 = []byte{
	// 836 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x8e, 0xda, 0x46,
	0x14, 0x5e, 0x83, 0xbd, 0xd8, 0xc7, 0x59, 0xe2, 0x4c, 0x7f, 0xe4, 0x6c, 0xaa, 0x2d, 0x45, 0xca,
	0x0a, 0xa9, 0x2a, 0x52, 0xe8, 0x5d, 0xa4, 0x5e, 0x10, 0xe2, 0x25, 0x48, 0x60, 0xa3, 0xb1, 0x49,
	0x2e, 0x2d, 0x03, 0xb3, 0xec, 0x68, 0x8d, 0x87, 0x7a, 0x06, 0xd0, 0xbe, 0x45, 0x9f, 0xa0, 0x2f,
	0xd0, 0x17, 0xea, 0x7d, 0x9f, 0xa0, 0x6f, 0x50, 0xcd, 0xd8, 0x2c, 0x2c, 0xcb, 0x45, 0x73, 0x77,
	0xce, 0x37, 0xdf, 0x19, 0x9d, 0xf9, 0xce, 0x77, 0x6c, 0x78, 0x35, 0x4d, 0xd7, 0x44, 0x30, 0x26,
	0xee, 0x56, 0xd3, 0xf6, 0x2a, 0x67, 0x82, 0x21, 0xfb, 0x00, 0x6a, 0xfe, 0xab, 0x83, 0x19, 0x12,
	0x21, 0x68, 0xb6, 0xe0, 0xe8, 0x5b, 0x30, 0x38, 0x5b, 0x67, 0x73, 0x57, 0x6b, 0x68, 0x2d, 0x13,
	0x17, 0x09, 0x7a, 0x0f, 0x66, 0x9a, 0x64, 0x8b, 0x75, 0xb2, 0x20, 0x6e, 0xa5, 0xa1, 0xb5, 0xea,
	0x9d, 0xab, 0xf6, 0xe1, 0xad, 0xbb, 0xf2, 0xf6, 0xb0, 0x64, 0xe1, 0x47, 0x3e, 0xfa, 0x19, 0x5e,
	0x6d, 0x18, 0x9d, 0x91, 0x38, 0x27, 0x33, 0xb6, 0xc8, 0xa8, 0xa0, 0x2c, 0x73, 0xab, 0xea, 0x76,
	0x47, 0x1d, 0xe0, 0x3d, 0x8e, 0xde, 0x80, 0x95, 0xac, 0x05, 0x8b, 0x97, 0x6c, 0x43, 0x5c, 0x5d,
	0x91, 0x4c, 0x09, 0x8c, 0xd8, 0x86, 0xc8, 0xc3, 0x3c, 0xc9, 0xe6, 0x6c, 0x19, 0x4f, 0xb7, 0xae,
	0x51, 0x1c, 0x16, 0xc0, 0x87, 0x2d, 0x7a, 0x0f, 0xb5, 0x55, 0x9a, 0x3c, 0x90, 0xfc, 0x9d, 0x7b,
	0xae, 0x3a, 0x6c, 0x9c, 0xee, 0x70, 0xac, 0x48, 0xd1, 0xc3, 0x8a, 0xe0, 0x5d, 0xc1, 0xbe, 0xb6,
	0xe3, 0xd6, 0xbe, 0xae, 0xb6, 0x83, 0x30, 0x38, 0x33, 0xb6, 0x5c, 0xad, 0x05, 0xc9, 0x77, 0x3c,
	0xd7, 0x6c, 0x68, 0x2d, 0xbb, 0x73, 0x7d, 0xfa, 0x92, 0xde, 0x11, 0x1b, 0x3f, 0xab, 0xbf, 0xfc,
	0x43, 0x03, 0xe7, 0x98, 0x86, 0x9a, 0x70, 0x21, 0xe8, 0x92, 0xc4, 0x29, 0x5d, 0x52, 0x11, 0x2f,
	0xb9, 0x9a, 0x90, 0x81, 0x6d, 0x09, 0x0e, 0x25, 0x36, 0xe2, 0xe8, 0x47, 0xb0, 0xf9, 0x3d, 0x4d,
	0xd3, 0x38, 0x25, 0x1b, 0x92, 0xaa, 0x51, 0x19, 0x18, 0x14, 0x34, 0x94, 0x08, 0x7a, 0x0b, 0xf5,
	0xa2, 0x9e, 0x8b, 0x9c, 0x64, 0x0b, 0x71, 0x57, 0x4e, 0xe2, 0x42, 0xa1, 0x61, 0x09, 0x22, 0x07,
	0xaa, 0x24, 0x65, 0x6a, 0x00, 0x06, 0x96, 0x61, 0xf3, 0x1a, 0xcc, 0xdd, 0x6c, 0x91, 0x0d, 0x35,
	0xcf, 0xef, 0x0f, 0x07, 0xe1, 0x27, 0xe7, 0x0c, 0x5d, 0x80, 0x15, 0x0e, 0x83, 0xcf, 0x9e, 0x3f,
	0xe8, 0xfa, 0x8e, 0xd6, 0x7c, 0x0b, 0xb0, 0x57, 0x09, 0x59, 0x60, 0x7c, 0x9a, 0x8c, 0xba, 0xbe,
	0x73, 0x86, 0x5e, 0x80, 0xd9, 0x0b, 0x46, 0xe3, 0x49, 0xe4, 0x61, 0x47, 0x6b, 0xfe, 0xa3, 0x83,
	0x89, 0x09, 0x5f, 0xb1, 0x8c, 0x13, 0xd4, 0x06, 0x5d, 0x3c, 0xac, 0x88, 0x7a, 0x50, 0xbd, 0x73,
	0xf9, 0x44, 0xb6, 0x1d, 0xa9, 0xad, 0x54, 0x57, 0x3c, 0xf4, 0x1b, 0x98, 0x19, 0x11, 0x5b, 0x96,
	0xdf, 0x73, 0xb7, 0xd2, 0xa8, 0xb6, 0xec, 0xce, 0x4f, 0xa7, 0x6b, 0xbe, 0xd0, 0x5b, 0xea, 0x17,
	0x4c, 0xfc, 0x58, 0x82, 0xde, 0x81, 0xc9, 0x77, 0x93, 0xaa, 0xaa, 0x49, 0x7d, 0x77, 0x72, 0x52,
	0xf8, 0x91, 0x86, 0xae, 0xa1, 0xbe, 0x48, 0x96, 0x64, 0x90, 0x8d, 0x73, 0xb6, 0xc8, 0x09, 0xe7,
	0xa5, 0x37, 0x8f, 0x50, 0xb9, 0x3d, 0xd2, 0xb9, 0xdc, 0x35, 0x1a, 0xd5, 0x96, 0x85, 0x8b, 0x04,
	0xfd, 0x00, 0xd6, 0xf6, 0x8e, 0x0a, 0x12, 0xad, 0xf3, 0x4c, 0x99, 0xd3, 0xc4, 0x7b, 0x40, 0x6d,
	0x9c, 0x48, 0x04, 0x51, 0xd6, 0xb3, 0x70, 0x91, 0xa0, 0x2e, 0xd8, 0xb3, 0x3b, 0xc2, 0x79, 0x3c,
	0x65, 0x49, 0x3e, 0x2f, 0x1d, 0xd5, 0x38, 0xfd, 0xcc, 0x9e, 0x24, 0x7e, 0x90, 0x3c, 0x0c, 0xb3,
	0xc7, 0xf8, 0xf2, 0x2f, 0x0d, 0xec, 0x03, 0x05, 0x10, 0x02, 0x9d, 0x73, 0x5a, 0x6c, 0xb6, 0x85,
	0x55, 0x2c, 0x5b, 0x9b, 0xb1, 0x2c, 0x23, 0x33, 0x41, 0xe6, 0xca, 0x2e, 0x26, 0xde, 0x03, 0xf2,
	0x34, 0xd9, 0x24, 0x34, 0x4d, 0xa6, 0x29, 0x29, 0x8d, 0xb2, 0x07, 0x54, 0xe3, 0xc9, 0x86, 0xcc,
	0x4b, 0x2d, 0x8a, 0x04, 0x5d, 0x01, 0x94, 0x17, 0xd0, 0x6c, 0x51, 0x6e, 0xe9, 0x01, 0x82, 0xbe,
	0x87, 0xf3, 0xdb, 0x84, 0xa6, 0x64, 0x5e, 0x2a, 0x51, 0x66, 0x97, 0x57, 0x00, 0xfb, 0x77, 0x48,
	0x03, 0xde, 0x92, 0xac, 0x6c, 0x55, 0x86, 0xcd, 0x0e, 0xe8, 0xca, 0x52, 0x26, 0xe8, 0x7e, 0x10,
	0x8c, 0x9d, 0x33, 0xf4, 0x12, 0xec, 0x7e, 0x77, 0xe4, 0xc5, 0x93, 0xf1, 0xc7, 0x6e, 0xe4, 0x39,
	0x9a, 0x04, 0xbe, 0x0c, 0x6e, 0x06, 0x3b, 0xa0, 0xd2, 0xfc, 0xbb, 0x02, 0x35, 0x4c, 0x7e, 0x5f,
	0x13, 0x2e, 0xd0, 0x2f, 0x4f, 0x4c, 0xf6, 0xfa, 0x48, 0x49, 0xc5, 0x39, 0xf4, 0xd8, 0x1b, 0xb0,
	0xb6, 0xf4, 0x96, 0xc6, 0x4a, 0xb1, 0x8a, 0x6a, 0xc3, 0x94, 0x40, 0x28, 0x55, 0x7b, 0x0d, 0x2a,
	0x8e, 0x57, 0xfc, 0x5e, 0xc9, 0x62, 0xe1, 0x9a, 0xcc, 0xc7, 0xfc, 0xfe, 0x89, 0xb9, 0xf4, 0xff,
	0x67, 0x2e, 0x04, 0xba, 0xfa, 0xdc, 0x19, 0xc5, 0x5c, 0x64, 0xdc, 0xfc, 0x53, 0x7b, 0xf6, 0xdc,
	0x6f, 0xe0, 0x65, 0x18, 0x75, 0x71, 0x14, 0xab, 0x37, 0x86, 0x3d, 0xb9, 0x6e, 0x08, 0x41, 0x3d,
	0x8c, 0x82, 0xf1, 0x01, 0x56, 0x91, 0x58, 0x2f, 0xf0, 0x6f, 0x06, 0xfd, 0x09, 0xf6, 0xd4, 0x81,
	0x53, 0x95, 0xd2, 0xdc, 0x04, 0xb8, 0xef, 0x15, 0xd5, 0x8e, 0x8e, 0x1c, 0x78, 0xd1, 0x0b, 0x7c,
	0xdf, 0xeb, 0x95, 0x88, 0x21, 0xef, 0x2f, 0x84, 0x8b, 0x43, 0x2f, 0x8a, 0x06, 0x7e, 0x3f, 0x74,
	0xce, 0xe5, 0x76, 0x4f, 0xfc, 0x8f, 0x41, 0x3c, 0x0a, 0x3e, 0x7b, 0x4e, 0x4d, 0x76, 0xa3, 0x22,
	0x73, 0x7a, 0xae, 0x7e, 0x24, 0xbf, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x1d, 0xfa, 0xab,
	0x5d, 0x06, 0x00, 0x00,
}
