// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bluetoothpb.proto

package bluetoothpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response struct {
	ChessBoard           *Response_ChessBoard `protobuf:"bytes,1,opt,name=chess_board,json=chessBoard,proto3" json:"chess_board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetChessBoard() *Response_ChessBoard {
	if m != nil {
		return m.ChessBoard
	}
	return nil
}

type Response_ChessBoard struct {
	Image                []byte   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_ChessBoard) Reset()         { *m = Response_ChessBoard{} }
func (m *Response_ChessBoard) String() string { return proto.CompactTextString(m) }
func (*Response_ChessBoard) ProtoMessage()    {}
func (*Response_ChessBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_6671346f1aa9b484, []int{0, 0}
}

func (m *Response_ChessBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_ChessBoard.Unmarshal(m, b)
}
func (m *Response_ChessBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_ChessBoard.Marshal(b, m, deterministic)
}
func (m *Response_ChessBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_ChessBoard.Merge(m, src)
}
func (m *Response_ChessBoard) XXX_Size() int {
	return xxx_messageInfo_Response_ChessBoard.Size(m)
}
func (m *Response_ChessBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_ChessBoard.DiscardUnknown(m)
}

var xxx_messageInfo_Response_ChessBoard proto.InternalMessageInfo

func (m *Response_ChessBoard) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func init() {
	proto.RegisterType((*Response)(nil), "bluetoothpb.Response")
	proto.RegisterType((*Response_ChessBoard)(nil), "bluetoothpb.Response.ChessBoard")
}

func init() { proto.RegisterFile("bluetoothpb.proto", fileDescriptor_6671346f1aa9b484) }

var fileDescriptor_6671346f1aa9b484 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xca, 0x29, 0x4d,
	0x2d, 0xc9, 0xcf, 0x2f, 0xc9, 0x28, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x2a, 0xe4, 0xe2, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x72, 0xe4,
	0xe2, 0x4e, 0xce, 0x48, 0x2d, 0x2e, 0x8e, 0x4f, 0xca, 0x4f, 0x2c, 0x4a, 0x91, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x36, 0x52, 0xd0, 0x43, 0x36, 0x01, 0xa6, 0x56, 0xcf, 0x19, 0xa4, 0xd0, 0x09, 0xa4,
	0x2e, 0x88, 0x2b, 0x19, 0xce, 0x96, 0x52, 0xe2, 0xe2, 0x42, 0xc8, 0x08, 0x89, 0x70, 0xb1, 0x66,
	0xe6, 0x26, 0xa6, 0xa7, 0x82, 0x8d, 0xe2, 0x09, 0x82, 0x70, 0x92, 0xd8, 0xc0, 0xce, 0x30, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x10, 0x7c, 0x72, 0x17, 0x9b, 0x00, 0x00, 0x00,
}
